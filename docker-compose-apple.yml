version: '3.2'
services:
  web:
    image: nginx:alpine
    hostname: web
    volumes:
      - ${MAGENTO_PATH}:/var/www:${FILE_SYNC}
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/server.crt:/etc/nginx/server.crt
      - ./etc/nginx/server.key:/etc/nginx/server.key

    networks:
      default:
        aliases:
          - magento.test
    ports:
      - "80:80"
    depends_on:
      - app
  db:
    image: mariadb
    hostname: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "magento"
    ports:
      - "3306:3306"
    volumes:
      - ./etc/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
  app:
    build:
      context: ./
      dockerfile: build/php/perf
    image: magento_app:perf_${PHP_VERSION}
    hostname: app
    volumes:
      - ${MAGENTO_PATH}:/var/www:${FILE_SYNC}
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tideways.ini:/usr/local/etc/php/conf.d/tideways.ini
      - ./etc/php/profiler.php:/usr/local/lib/php/header.php
      - ./etc/php/append.ini:/usr/local/etc/php/conf.d/append.ini
    environment:
      COMPOSER_HOME: /var/www/.composer
    ports:
      - "222:22"
  xhgui:
    image: duhon/xhgui
    hostname: xhgui
    ports:
      - "81:80"
  mongodb:
    image: mongo
    hostname: mongo
    ports:
      - "27017:27017"
  elastic:
    image: elasticsearch:5
    hostname: elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
networks:
  default:
    driver: bridge
